name: post-artifact
description: |
  Creates a post in the PR linking to an artifact.
  Subsequent runs will update the comment.
inputs:
  artifact-id:
    description: |
      The id of the artifact. Should be the output from
      `actions/upload-artifacts`. For example:
      steps.[name upload step].outputs.artifact-id .
    required: true
  artifact-name:
    description: Message to include
    required: false
    default: 'artifact'
  job-os:
    description: |
      The operating system to use. This overrides the default
      operating system of the runner which may be useful when
      the job is running on a container.
    required: false
    default: ${{ runner.os}}
runs:
  using: 'composite'
  steps:

    - name: Compose message
      id: compose
      run: |
        echo -n "Thank you for your contribution @${{ github.actor }}"> _msg-${{ github.sha }}.txt
        echo -n ":rocket:! Your ${{ inputs.artifact-name }} is ready ">>_msg-${{ github.sha }}.txt
        echo -n "for download :point_right: [here](" >> _msg-${{ github.sha }}.txt
        echo -n "https://github.com/${{ github.repository }}/actions/">>_msg-${{ github.sha }}.txt
        echo -n "runs/${{ github.run_id }}/artifacts/" >> _msg-${{ github.sha }}.txt 
        echo -n "${{ inputs.artifact-id }}) :point_left:!" >> _msg-${{ github.sha }}.txt
      shell: bash

    # Verifies whether gh is installed and installs it if not
    - name: Installing gh ubuntu
      if: ${{ startsWith(inputs.runner-os, 'ubuntu') || startsWith(inputs.runner-os, 'linux') }}
      run: |
        if ! command -v gh &> /dev/null; then
          sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key C99B11DEB97541F0
          sudo apt-add-repository https://cli.github.com/packages
          sudo apt update
          sudo apt install gh
        fi
      shell: bash

    - name: Installing gh windows
      if: ${{ startsWith(inputs.runner-os, 'windows') }}
      run: |
        if ! command -v gh &> /dev/null; then
          choco install gh
        fi
      shell: bash

    - name: Installing gh macos
      if: ${{ startsWith(inputs.runner-os, 'macos') }}
      run: |
        if ! command -v gh &> /dev/null; then
          brew install gh
        fi
      shell: bash
        
    - name: Get the event
      run: |
        gh pr view -R ${{ github.repository }} \
          ${{ github.event.number }} -c --json comments > \
          _events-${{ github.sha }}.json
      shell: bash

    - name: Get comment preview
      run: |
        import json
        import re

        def main(json_comments) -> str:

            # Open the JSON file and load its contents into a Python object
            with open(json_comments, 'r') as file:
                data = json.load(file)

            if (data['comments'] == []):
                return ''

            # Generating matching string
            matching_msg = "Thank you for your contribution " \
              "@${{ github.actor}}:rocket:! Your ${{ inputs.artifact-name }}" 

            # Now you can work with the 'data' object
            for i in range(len(data['comments'])):
                body = data['comments'][i]['body']
                auth = data['comments'][i]['author']['login']
                url =  data['comments'][i]['url']
                match = re.search(r'\d+$', url)

                if not match:
                    continue

                id = match.group()

                # Regex match to the body of the comment looking
                # for the expression "Thank you for your contribution"
                # if found, print the author and the body of the comment
                if (matching_msg in body) and (auth == 'github-actions'):
                    return id

            return ''

        id = main('_events-${{ github.sha }}.json')
        fn = '_ID-${{ github.sha }}'
        with (open(fn, 'w')) as file:
            file.write(id)

        with (open(fn+'_found', 'w')) as file:
            if id == '':
                file.write('false')
            else:
                file.write('true')

      shell: python {0}

    - name: Putting the contents of _msg.txt into an environment var
      id: set-env
      run: |
        echo "MSG=$(cat _msg-${{ github.sha }}.txt)" >> $GITHUB_OUTPUT
        echo "ID=$(cat _ID-${{ github.sha }})" >> $GITHUB_OUTPUT
        echo "FOUND=$(cat _ID-${{ github.sha }}_found)" >> $GITHUB_OUTPUT
      shell: bash

    # See:
    # https://docs.github.com/en/rest/issues/comments?apiVersion=2022-11-28#update-an-issue-comment
    - name: Add comment
      if: ${{ github.event_name == 'pull_request' && steps.set-env.outputs.FOUND == 'false' }}
      run: |
        echo "No comment from github-bot found, adding a new one."
        gh pr comment -R ${{ github.repository }} \
          ${{ github.event.number }} -b "${{ steps.set-env.outputs.MSG }}"
      shell: bash
    
    - name: Update comment
      if: ${{ github.event_name == 'pull_request' && steps.set-env.outputs.FOUND == 'true' }}
      run: |
        echo "Editing original comment id: ${{ steps.set-env.outputs.ID }}."
        gh api \
          --method PATCH \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          /repos/${{ github.repository}}/issues/comments/${{ steps.set-env.outputs.ID }} \
          -f "body=${{ steps.set-env.outputs.MSG }}"
      shell: bash